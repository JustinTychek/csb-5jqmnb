{"version":3,"sources":["App.js","index.js"],"names":["App","state","index","useState","dialogues","setLocations","useEffect","fetch","then","res","json","response","forEach","entry","active","count","setCount","dialogueResponse","map","person","text","name","className","onClick","responses","resptext","id","slice","this","v","rootElement","document","getElementById","createRoot","render"],"mappings":"mMAKe,SAASA,IAEtBC,MAAQ,CAAEC,MAAO,GAEjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAGAC,qBAAU,WACRC,MAAM,sBACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACG,GAELA,EAASC,SAAQ,SAACC,GAChBA,EAAMC,QAAS,CAChB,IAEDT,EAAaM,EACd,GACJ,IAGD,MAA0BR,mBAAS,iBAAnC,mBAAOY,EAAP,KAAcC,EAAd,KAEMC,EAAmBb,EAAUc,KAAI,SAACC,GAAD,OACrC,gCACE,8BAAMA,EAAOC,OACb,kCAAKD,EAAOE,KAAZ,QACA,wBACEC,UAAU,MACVC,QAAS,WACPP,EAASG,EAAOK,UAAU,GAAGC,SAC9B,EAJH,SAMGN,EAAOK,UAAU,GAAGC,WAEvB,wBACEH,UAAU,MACVC,QAAS,kBAAMP,EAASG,EAAOK,UAAU,GAAGC,SAAnC,EAFX,SAIGN,EAAOK,UAAU,GAAGC,aAffN,EAAOO,GADoB,IAsBvC,OACE,sBAAKJ,UAAU,MAAf,UACE,6EACA,qBAAKA,UAAU,UAAf,SACE,8BAAMP,MAGPE,EAAiB,GACjBA,EAAiB,GACjBA,EAAiB,GAejBA,EAAiBU,MAAM,EAAGC,KAAK3B,MAAMC,OAAOgB,KAAI,SAACW,GAChD,OAAO,+BAAOA,GACf,MAGN,CC3ED,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OAAO,cAAClC,EAAD,I","file":"static/js/main.21a6dc66.chunk.js","sourcesContent":["//Group Members: Elissa Murphy, Caleb Moretti, Justin Tychek, Aiden Eichenour, Marielle Harrell\n\nimport \"./styles.css\";\nimport { useEffect, useState } from \"react\";\n\nexport default function App() {\n  //  display state-based text on the screen\n  state = { index: 0 };\n\n  const [dialogues, setLocations] = useState([]);\n\n  //fetch the data from the dialogue.json file\n  useEffect(() => {\n    fetch(\"data/dialogue.json\")\n      .then((res) => res.json())\n      .then((response) => {\n        // console.log(response);\n        response.forEach((entry) => {\n          entry.active = false;\n        });\n\n        setLocations(response);\n      });\n  });\n\n  //pre render\n  const [count, setCount] = useState(\"Cool Text Box\"); //similar to componentdidmount\n  // const [number, setNumber] = useState(\"\");\n  const dialogueResponse = dialogues.map((person) => (\n    <div key={person.id}>\n      <div>{person.text}</div>\n      <b> {person.name}: </b>\n      <button\n        className=\"btn\"\n        onClick={() => {\n          setCount(person.responses[0].resptext);\n        }}\n      >\n        {person.responses[0].resptext}\n      </button>\n      <button\n        className=\"btn\"\n        onClick={() => setCount(person.responses[1].resptext)}\n      >\n        {person.responses[1].resptext}\n      </button>\n    </div>\n  ));\n\n  // console.log(dialogueResponse);\n  return (\n    <div className=\"App\">\n      <h2>Hello, Welcome to the Dialogue Detective :)</h2>\n      <div className=\"coolBox\">\n        <div>{count}</div>\n      </div>\n\n      {dialogueResponse[0]}\n      {dialogueResponse[1]}\n      {dialogueResponse[2]}\n      {/* <button\n        id=\"nextMessage\"\n        className=\"btn\"\n        onClick={() => setCount(dialogueResponse[1])}\n      >\n        Next Message\n      </button> */}\n      {/* <button className=\"btn\" onClick={() => setCount(dialogueResponse[1])}>\n        {dialogueResponse[1]}\n      </button>\n      <button className=\"btn\" onClick={() => setCount(dialogueResponse[0])}>\n        {dialogueResponse[2]}\n      </button> */}\n\n      {dialogueResponse.slice(0, this.state.index).map((v) => {\n        return <span>{v}</span>;\n      })}\n    </div>\n  );\n}\n\n// [\n//   { text: \"Hahaha\", responses:\n//            [ { \"text:\", \"yes\", \"goto\": 10 },\n//              { \"text:\", \"no\", \"goto\": 2 } ]\n// } ]\n\n// Then you loop through the responses, when they're clicked\n//- go to the index in the array associated with the goto.\n\n//This is way more complex then what I expect in dialog detetctive..\n//but fun to design :)\n","import { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(<App />);\n"],"sourceRoot":""}